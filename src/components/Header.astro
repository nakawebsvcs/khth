---
import navData from "@data/navData.json";
import { Icon } from 'astro-icon/components';
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation">
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <img
        src="/Logo-1-300x200.png"
        alt=""
        width="210"
        height="29"
        aria-hidden="true"
        decoding="async"
      />
      <h2>Kids Hurt Too Hawai ªi</h2>
    </a>

    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button class="cs-toggle" id="mobile-menu-toggle" aria-expanded="false" aria-controls="cs-expanded-ul" aria-label="Toggle mobile menu.">
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- If you want to use another navigation stitch and enjoy the benefits of dynamic routing, replace the .cs-ul-wrapper in the navigation stitch with this one below -->
     <div class="cs-ul-wrapper">
  <ul id="cs-expanded-ul" class="cs-ul">
    {navData.map((entry) => (
      <li
        class:list={[
          "cs-li",
          { "cs-dropdown": entry.children?.length > 0 },
        ]}
      >
       {entry.children?.length > 0 ? (
  <div class="cs-parent-wrapper">
    <a
  href={entry.url}
  class:list={[
    "cs-li-link",
    { "cs-active": Astro.url.pathname === entry.url },
  ]}
  aria-current={Astro.url.pathname === entry.url ? "page" : undefined}
>
  {entry.key}
</a>
    <button
      aria-expanded="false"
      aria-controls={`submenu-${entry.key}`}
      class="cs-dropdown-button"
    >
      <Icon name="mdi--caret" class="cs-drop-icon" />
    </button>
  </div>
        ) : (
          <a
            href={entry.url}
            class:list={[
              "cs-li-link",
              { "cs-active": Astro.url.pathname === entry.url },
            ]}
            aria-current={Astro.url.pathname === entry.url ? "page" : undefined}
          >
            {entry.key}
          </a>
        )}
        {entry.children?.length > 0 && (
          <ul id={`submenu-${entry.key}`} class="cs-drop-ul">
            {entry.children.map((child) => (
              <li class="cs-drop-li">
                <a
  href={child.url}
  target={child.url.includes('networkforgood.com') ? '_blank' : '_self'}
  class="cs-li-link cs-drop-link"
  aria-current={Astro.url.pathname === child.url ? "page" : undefined}
>
  {child.key}
</a>

              </li>
            ))}
          </ul>
        )}
      </li>
    ))}
  </ul>
   <a href="/contact" class="cs-button-solid cs-nav-button">Contact Us</a>
</div>
    </nav>
  </div>
</header>

<style lang="less">

/*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

/* Mobile - 1023px */
@media only screen and (max-width: 63.9375rem) {
  body {
    &.cs-open {
      overflow: hidden;
    }
  }

  #cs-navigation {
    width: 100%;
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    padding: (12/16rem) (16/16rem);
    background-color: #fff;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 10000;

    &:before {
      /* black blurred overlay */
      content: "";
      width: 0%;
      height: 100vh;
      background: rgba(0, 0, 0, 0.6);
      opacity: 0;
      display: block;
      position: absolute;
      top: 100%;
      right: 0;
      z-index: -11;
      transition: width 0.5s, opacity 0.3s;
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
    }

    &.cs-active {
      &:before {
        width: 100%;
        opacity: 1;
      }

      .cs-ul-wrapper {
        opacity: 1;
        visibility: visible;
        transform: scaleX(1);
        transition-delay: 0.2s;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-end;
        padding: 1rem;
        box-sizing: border-box;
      }

      .cs-ul {
      width: 100%;
      height: auto;
      max-height: calc(100vh - 100px); // Adjust based on your header height
      overflow-y: auto;
      margin-bottom: 1rem;
    }

      .cs-li {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .cs-container {
      width: 100%;
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }

    .cs-logo {
      &, &:hover, &:focus {
        text-decoration: none;
      }
      display: flex;
      align-items: center;
      gap: (16/16rem);
      width: auto;
      max-width: none;
      height: clamp(2.5rem, 4vw, 3.5rem);
      margin: 0 auto 0 0;
      padding: 0 0 0 (16/16rem);
      z-index: 10;
      
      img {
        width: auto;
        height: 100%;
        object-fit: contain;
      }
      
      h2 {
        margin: 0;
        white-space: nowrap;
        color: var(--primary);
        font-size: clamp(1.5rem, 1.5vw, 1.5rem);
      }
    }

    .cs-nav-button {
      width: 50%;
      margin-top: 1rem;
      text-align: center;
      order: 1;
    }

    .cs-toggle {
      /* 44px - 48px */
      width: clamp(2.75rem, 6vw, 3rem);
      height: clamp(2.75rem, 6vw, 3rem);
      margin: 0 0 0 auto;
      background-color: transparent;
      border: none;
      border-radius: (4/16rem);
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .cs-li-link {
      font-size: clamp(1.5rem, 2vw, 2rem) !important;
      padding: 1rem 2rem 1rem;
    }

    .cs-active {
      .cs-line1 {
        top: 50%;
        transform: translate(-50%, -50%) rotate(225deg);
      }

      .cs-line2 {
        top: 50%;
        transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
        transform-origin: center;
      }

   /* Mobile - 1023px */
@media only screen and (max-width: 63.9375rem) {
  #cs-navigation {
    .cs-logo {
      width: 40%;
      max-width: (146/16rem);
      height: 100%;
      margin: 0 auto 0 0;
      box-sizing: border-box;
      padding: 0;
      display: flex;
      justify-content: flex-start; // Changed from center
      align-items: center;
      gap: 1rem;
      z-index: 10;
      text-decoration: none;

      h2 {
        margin: 0;
        white-space: nowrap;
        color: var(--headerColor);
        font-size: clamp(1rem, 1.5vw, 1.5rem);
      }
    }
  }
}

 /* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    .cs-logo {
      &, &:hover, &:focus {
        text-decoration: none;
      }
      display: flex;
      align-items: center;
      gap: 1rem;
          
      h2 {
        margin: 0;
        white-space: nowrap;
        color: var(--headerColor);
        font-size: clamp(1rem, 1.5vw, 1.5rem);
      }
    }
  }
}  .cs-line3 {
        opacity: 0;
        bottom: 100%;
      }
    }

    .cs-box {
      /* 24px - 28px */
      width: clamp(1.5rem, 2vw, 1.75rem);
      /* 14px - 16px */
      height: clamp(0.875rem, 1.5vw, 1rem);
      position: relative;
    }

    .cs-line {
      width: 100%;
      height: 2px;
      background-color: #1a1a1a;
      border-radius: 2px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }

    .cs-line1 {
      top: 0;
      transition: transform 0.5s, top 0.3s, left 0.3s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
      transform-origin: center;
    }

    .cs-line2 {
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
      transition: top 0.3s, left 0.3s, transform 0.5s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
    }

    .cs-line3 {
      bottom: 0;
      transition: bottom 0.3s, opacity 0.3s;
    }

    .cs-ul-wrapper {
      height: 100vh;
      background-color: #fff;
      box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
      opacity: 0;
      visibility: hidden;
      position: absolute;
      top: 100%;
      right: 0;
      left: auto;
      z-index: -1;
      overflow: hidden;
      transform: scaleX(0);
      transition: transform 0.4s, opacity 0.3s;
      transform-origin: top right;
    }

    .cs-nav-button {
      display: inline-block;
    }

    .cs-ul {
      width: auto;
      min-width: 40%;
      height: 65vh;
      margin: 0;
      /* 28px - 40px */
      padding: 0;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-end;
      gap: clamp(0.5rem, 1vw, 0.75rem);
      overflow: scroll;
    }

    .cs-li {
      text-align: right;
      list-style: none;
      width: 100%;
      margin-right: 0;
      opacity: 0;
      /* transition from these values */
      transform: translateX(-40/16rem);
      transition: transform 0.6s, opacity 0.9s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
    }

    .cs-li-link {
      /* 16px - 24px */
      font-size: clamp(1rem, 2.5vw, 1.5rem);
      color: inherit;
      line-height: 1.2em;
      text-decoration: none;
      margin: 0;
      display: inline-block;
      position: relative;

      &:before {
        /* active state underline */
        content: "";
        width: 100%;
        height: 1px;
        background: currentColor;
        opacity: 1;
        display: none;
        position: absolute;
        bottom: (-2/16rem);
        left: 0;
      }

      &.cs-active {
        &:before {
          display: block;
        }
      }
    }

    .cs-button-solid {
      font-size: 0.8rem;
    padding: 0.8rem 1.5rem; /* Adjusted padding for better spacing */
    text-align: center;
    white-space: normal;
    line-height: 1; /* Ensures consistent vertical alignment */
    display: inline-flex; /* Use flexbox for centering */
    align-items: center; /* Vertically centers the text */
    justify-content: center; /* Horizontally centers the text */
}
  }
}

/* Desktop - 1024px and above */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    .cs-ul-wrapper {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-end;
      height: auto;
      opacity: 1;
      visibility: visible;
      position: static;
      background-color: transparent;
      box-shadow: none;
      transform: none;
      overflow: visible;
      transition: none;
    }

    .cs-ul {
      width: auto;
      min-width: 0;
      height: auto;
      margin: 0;
      padding: 0;
      background-color: transparent;
      box-shadow: none;
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;
      gap: 1.5rem;
      overflow: visible;
    }

    .cs-li {
      width: auto;
      opacity: 1;
      transform: none;
      text-align: left;
      margin-right: 0;
      transition: none;
    }

    .cs-li-link {
      font-size: 1rem !important;
      padding: 0;
    }

    .cs-nav-button {
      width: auto;
      margin-top: 0;
      margin-left: 1.5rem;
      order: 0;
    }

    .cs-button-solid {
      margin-left: 2rem;
      padding: 0.8rem 2.5rem; 
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 12rem; 
      min-width: 8rem; 
      display: inline-flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem; 
    }

    .cs-toggle {
      display: none;
    }
  }
}

/* Extra Large Desktop - 1900px and above */
@media only screen and (min-width: 118.75rem) {
  #cs-navigation {
    .cs-container {
      max-width: 1880px;
      padding: 0 5rem; 
      justify-content: space-between !important;
    }

    .cs-logo {
      max-width: 18%; 
      margin-right: 20% !important;
    }

    .cs-ul {
      gap: clamp(3rem, 5vw, 5rem);
    }

    .cs-button-solid {
      margin-left: 4rem; 
      padding: 1.2rem 2.5rem; 
      min-width: 14rem; 
      max-width: 18rem; 
    }
  }
}

/*-- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- -*/

/* Mobile - 1023px */
@media only screen and (max-width: 63.9375rem) {
  #cs-navigation {
    .cs-dropdown {
      color: var(--bodyTextColorWhite);
      color: var(--headerColor);

      position: relative;

      &.cs-active {
        .cs-drop-ul {
          height: auto;
          margin: (12/16rem) 0 0 0;
          padding: (24/16rem);
          opacity: 1;
          visibility: visible;
          transform: scale(1);
        }

        .cs-drop-link {
          opacity: 1;
        }

        .cs-drop-icon {
          transform: rotate(0);
        }
      }

      .cs-li-link {
        position: relative;
        transition: opacity 0.3s;
      }
    }

    .cs-drop-icon {
      width: (15/16rem);
      height: auto;
      display: inline-block;
      color: inherit;
      transform: rotate(180deg);
      transition: 0.3s;
    }

    .cs-drop-ul {
      width: 100%;
      height: 0;
      margin: 0;
      box-sizing: border-box;
      padding: 0 (24/16rem) 0 (24/16rem);
      background-color: var(--primary);
      opacity: 0;
      display: flex;
      visibility: hidden;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-end;
      gap: (12/16rem);
      overflow: hidden;
      transform: scale(0);
      transition: padding 0.3s, margin 0.3s, height 0.3s, opacity 0.3s,
        transform 0.3s, visibility 0.3s;
      transform-origin: top right;
    }

    .cs-drop-li {
      text-align: inherit;
      list-style: none;
    }

    .cs-li-link {
      &.cs-drop-link {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 2vw, 1.25rem);
        color: #fff;
      }
    }

    .cs-dropdown-button {
      background-color: transparent;
      border: none;
      appearance: none;
    }
    .cs-parent-wrapper {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 0.5rem;
    width: 100%;
}

.cs-dropdown-button {
    padding: 0.5rem;
    color: inherit;
}

  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    .cs-dropdown {
      position: relative;
      &:hover,
      &.cs-active {
        cursor: pointer;
        .cs-drop-ul {
          opacity: 1;
          visibility: visible;
          transform: scaleY(1);
        }

        .cs-drop-li {
          opacity: 1;
          transform: translateY(0);
        }
      }
    }

    .cs-dropdown:has(.cs-drop-icon) {
      display: flex;
      align-items: center;
      &:hover {
        .cs-drop-icon {
        transform: rotate(0);
        }
      }
    }


    .cs-drop-icon {
      width: (15/16rem);
      height: auto;
      display: inline-block;
      color: inherit;
      transform: rotate(180deg);
      transition: 0.3s;
      
    }

    .cs-drop-ul {
      min-width: (200/16rem);
      margin: 0;
      padding: 0;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 10px 16px;
      opacity: 0;
      border-bottom: 5px solid var(--primary);
      visibility: hidden;
      /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
      // columns: 2;
      position: absolute;
      top: 100%;
      z-index: -100;
      overflow: hidden;
      transform: scaleY(0);
      transition: transform 0.3s, visibility 0.3s, opacity 0.3s;
      transform-origin: top;
    }

    .cs-drop-li {
      font-size: (16/16rem);
      text-decoration: none;
      list-style: none;
      width: 100%;
      height: auto;
      color: var(--bodyTextColor);
      opacity: 0;
      display: block;
      transform: translateY(-10/16rem);
      transition: opacity 0.6s, transform 0.6s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
      &:nth-of-type(10) {
        transition-delay: 0.5s;
      }
      &:nth-of-type(11) {
        transition-delay: 0.55s;
      }
      &:nth-of-type(12) {
        transition-delay: 0.6s;
      }
      &:nth-of-type(13) {
        transition-delay: 0.65s;
      }
    }

    .cs-li-link {
      &.cs-drop-link {
        font-size: (16/16rem);
        line-height: 1.5em;
        text-decoration: none;
        white-space: nowrap;
        width: 100%;
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        padding: (12/16rem);
        color: var(--bodyTextColor);
        display: block;
        transition: color 0.3s, background-color 0.3s;

        &:hover {
          background-color: #f7f7f7;
        }

        &:focus-within {
          outline: 2px solid currentColor;
          outline-offset: -2px;
        }

        &:before {
          display: none;
        }
      }
    }

    .cs-dropdown-button {
      background-color: transparent;
      border: none;
      appearance: none;
    }
    .cs-parent-wrapper {
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

.cs-dropdown-button {
    padding: 0.25rem;
    color: inherit;
}

  }
}

/*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: "Roboto", "Arial", sans-serif;
    width: 100%;
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    padding: 0 (16/16rem);
    background-color: #fff;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 10000;

    .cs-container {
      width: 100%;
      max-width: (1280/16rem);
      margin: auto;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: (24/16rem);
    }

    .cs-toggle {
      display: none;
    }

    .cs-logo {
      width: 18.4%;
      max-width: (350/16rem);
      height: (65/16rem);
      /* margin-right auto pushes everything away from it to the right */
      margin: 0 auto 0 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      gap: 1rem;
      z-index: 100;
      text-decoration: none;

      h2 {
        margin: 0;
        white-space: nowrap;
        color: var(--primary);
        font-size: clamp(1rem, 1.5vw, 1.5rem);
      }

      img {
        width: 100%;
        height: 100%;
        /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
        object-fit: contain;
      }
    }

    .cs-ul {
      width: 100%;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      /* 20px - 36px */
      gap: clamp(1.25rem, 2.6vw, 2.25rem);
    }

    .cs-li {
      list-style: none;
      padding: (32/16rem) 0;
      /* prevent flexbox from squishing it */
      flex: none;
    }

    .cs-li-link {
      /* 14px - 16px */
      font-size: clamp(1.1rem, 1.2vw, 1.3rem);
      line-height: 1.5em;
      text-decoration: none;
      margin: 0;
      color: var(--bodyTextColor);
      display: block;
      position: relative;
      &:hover {
        &:before {
          width: 100%;
        }
      }

      &.cs-active {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* active state underline */
        content: "";
        width: 0%;
        height: 2px;
        background: var(--primary);
        opacity: 1;
        display: block;
        position: absolute;
        bottom: (0/16rem);
        left: 0;
        transition: width 0.3s;
      }
    }
    .cs-parent-wrapper {
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

.cs-dropdown-button {
    padding: 0.25rem;
    color: inherit;
}
  }
}

/* Very Large Desktop - 1440px and above */
@media only screen and (min-width: 95rem) {
  #cs-navigation {
    .cs-container {
      max-width: 1440px; /* Increase the container width for large screens */
      padding: 0 3rem; /* Add more padding for larger screens */
    }

    .cs-logo {
      margin-right: 12rem;
      max-width: 12%; /* Further limit the logo width */
    }

    .cs-ul {
      gap: clamp(2rem, 3vw, 3.5rem); /* Increase spacing between navigation links */
    }

     .cs-button-solid {
      margin-left: 12rem; /* Push the button to the far right */
      padding: 1.2rem 2.5rem; /* Ensure sufficient padding inside the button */
      white-space: nowrap; /* Prevent text from wrapping */
      overflow: hidden; /* Prevent text overflow */
      text-overflow: ellipsis; /* Add ellipsis if text overflows */
      min-width: 10rem; /* Ensure the button doesn‚Äôt exceed its container */
      display: inline-flex; /* Use flexbox for centering */
      align-items: center; /* Vertically center the text */
      justify-content: center; /* Horizontally center */
    }
  }
}
</style>
